{"ast":null,"code":"var _jsxFileName = \"/Users/tsitsi_iobashvili/Desktop/Task/data-visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { Box, Button, Input, Paper, PropTypes, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport { makeStyles } from \"@mui/styles\";\nimport EmptyTableIcon from \"./EmptyTableIcon\";\n//import { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  body: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"16px\",\n    paddingInline: \"20px\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n    boxSizing: \"border-box\"\n  },\n  title: {\n    padding: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  btn: {\n    padding: \"8px\",\n    margin: \"0px\"\n  }\n});\nfunction App() {\n  _s();\n  const classes = useStyles();\n  const [parsedData, setParsedData] = useState([]);\n  const [tableRows, setTableRows] = useState([]);\n  const [values, setValues] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  console.log(values.length);\n  console.log(parsedData);\n  const changeHandler = event => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map(d => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.title,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"CSV File Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: \"label\",\n        size: \"small\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(FileUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }, this),\n        className: classes.btn,\n        children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: changeHandler,\n          accept: \".csv\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), parsedData.length <= 0 ? /*#__PURE__*/_jsxDEV(EmptyTableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        style: {\n          height: 600,\n          width: \"100%\"\n        },\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.tableHeader,\n              children: tableRows.map((rows, index) => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: rows\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: values.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: value.map((val, i) => {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      maxWidth: 400\n                    },\n                    children: val\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: parsedData.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i7myaK4vCFYxovcAqbh/d07ZCy8=\", false, function () {\n  return [useStyles];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Papa","Box","Button","Input","Paper","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Typography","FileUploadIcon","makeStyles","EmptyTableIcon","useStyles","body","display","justifyContent","alignItems","padding","paddingInline","flexDirection","height","width","boxSizing","title","btn","margin","App","classes","parsedData","setParsedData","tableRows","setTableRows","values","setValues","rowsPerPage","setRowsPerPage","page","setPage","handleChangeRowsPerPage","event","parseInt","target","value","handleChangePage","newPage","console","log","length","changeHandler","parse","files","header","skipEmptyLines","complete","results","rowsArray","valuesArray","data","map","d","push","Object","keys","tableHeader","rows","index","val","i","maxWidth"],"sources":["/Users/tsitsi_iobashvili/Desktop/Task/data-visualizer/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport {\n  Box,\n  Button,\n  Input,\n  Paper,\n  PropTypes,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport { makeStyles } from \"@mui/styles\";\nimport EmptyTableIcon from \"./EmptyTableIcon\";\n//import { DataGrid } from '@mui/x-data-grid';\n\nconst useStyles = makeStyles({\n  body: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"16px\",\n    paddingInline: \"20px\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n  },\n\n  title: {\n    padding: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n\n  btn: {\n    padding: \"8px\",\n    margin: \"0px\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [parsedData, setParsedData] = useState([]);\n  const [tableRows, setTableRows] = useState([]);\n  const [values, setValues] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  console.log(values.length);\n  console.log(parsedData);\n\n  const changeHandler = (event) => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map((d) => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      },\n    });\n  };\n\n  return (\n    <Box className={classes.body}>\n      <Box className={classes.title}>\n        <Typography variant=\"h4\">CSV File Visualizer</Typography>\n        {/* File Uploader */}\n        <Button\n          component=\"label\"\n          size=\"small\"\n          variant=\"outlined\"\n          startIcon={<FileUploadIcon />}\n          className={classes.btn}\n        >\n          Upload File\n          <input type=\"file\" onChange={changeHandler} accept=\".csv\" hidden />\n        </Button>\n      </Box>\n\n      {/* DataTable */}\n\n      {parsedData.length <= 0 ? (\n        <EmptyTableIcon />\n      ) : (\n        <>\n          <TableContainer\n            style={{ height: 600, width: \"100%\" }}\n            component={Paper}\n          >\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow className={classes.tableHeader}>\n                  {tableRows.map((rows, index) => {\n                    return <TableCell key={index}>{rows}</TableCell>;\n                  })}\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {values.map((value, index) => {\n                  return (\n                    <TableRow key={index}>\n                      {value.map((val, i) => {\n                        return (\n                          <TableCell style={{ maxWidth: 400 }} key={i}>\n                            {val}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={parsedData.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}